' See https://qb64.com/wiki/FILES for details on get directory.GetAllFiles


'$INCLUDE:'.\constants.bi'
'$INCLUDE:'.\file.bm'

$if ddlibDirectory = undefined then
$let ddlibDirectory = define
'$Dynamic

' ----------------------------------------------------------------------------
' Determines whether the given path refers to an existing directory on disk.
'___
' - @param {string} path The path to test
function directory.Exists(path as string)
	if _direxists(path) then
		directory.Exists = boolean.TRUE
	else
		directory.Exists = boolean.FALSE
	end if
end function
' ----------------------------------------------------------------------------
' Creates a new folder (directory) at a specified path.
'___
' - @param {string} path The directory to create.
function directory.CreateDirectory(path as string)
	if not directory.Exists(path) then
		mkdir path
	end if
	directory.CreateDirectory = directory.Exists(path)
end function
' ----------------------------------------------------------------------------
' #### Deletes an empty directory using a designated path relative to the present path location.
'___
' - @param {string} path The directory to delete.
sub directory.Delete(path as string)
	if directory.Exists(path) then
		rmdir path
	end if
end sub
' ----------------------------------------------------------------------------
'___
' #### Returns the names of files that meet specified criteria
'___
' - @param {string} path The relative or absolute path to the directory to search. This string is not case-sensitive.
' &nbsp;&nbsp;&nbsp;path can use the * and ? wildcard specifications:
' &nbsp;&nbsp;&nbsp;&nbsp;* denotes one or more wildcard characters in a filename or path specification as any legal file name character(s).<br>
' &nbsp;&nbsp;&nbsp;&nbsp;? denotes one wildcard letter in a filename or path specification as any legal filename character.
'
' - @param {string} path Search path.
' - @param {string array} Array to put files in
sub directory.GetAllFiles(path as string, fileArray() as string)
	dim tmpfile as string : tmpfile = "ddlib-dir$inf0temp.inf"
	dim listMAX as integer : listMAX = 2000 'change maximum to suit your needs
	dim size as long : size = long.EMPTY
	
	redim	fileArray(1 to 0)
	if path = string.EMPTY then
		exit sub
	end if
	
	dim count as integer : count = 0
	dim fileHandle as long : fileHandle = long.EMPTY
	if instr(_os$,"[WINDOWS]") > 0 then
		shell _hide "dir " + path$ + " /b > " + tmpFile
	else
		shell _hide "ls -l " + path$ + " /b > " + tmpFile
	end if
	
	if file.GetSize(tmpfile) = long.EMPTY then
		redim	fileArray(1 to 0)
		kill tmpfile
		exit sub
	end if
	
	redim fileArray(listMAX)
	fileHandle = file.OpenInput(tmpfile)
	
	do while not eof(fileHandle) and count < listMAX
		count = count + 1
		input #fileHandle, fileArray(count)
	loop
	
	redim _preserve fileArray(count)
	close fileHandle
	kill tmpfile
	
end sub


$end if

